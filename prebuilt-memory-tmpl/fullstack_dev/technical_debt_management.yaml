name: "Technical Debt Management"
description: "Memory template for tracking and managing technical debt"
sections:
  identification:
    description: "Technical debt identification and cataloging"
    importance: 0.8
    guidelines: |
      - Code smell detection and static analysis results
      - Architecture violations and anti-patterns
      - Performance bottlenecks and scalability issues
      - Security vulnerabilities and compliance gaps
      - Documentation gaps and knowledge debt
  
  prioritization:
    description: "Debt prioritization and impact assessment"
    importance: 0.8
    guidelines: |
      - Business impact and risk assessment
      - Development velocity impact analysis
      - Maintenance cost and effort estimation
      - Technical debt quadrant classification
      - Stakeholder communication and buy-in
  
  remediation:
    description: "Debt remediation planning and execution"
    importance: 0.7
    guidelines: |
      - Refactoring strategies and approaches
      - Legacy system modernization plans
      - Incremental improvement and boy scout rule
      - Testing strategy for refactored code
      - Migration and transition planning
  
  prevention:
    description: "Technical debt prevention strategies"
    importance: 0.7
    guidelines: |
      - Code review guidelines and standards
      - Architecture decision records (ADRs)
      - Design patterns and best practices
      - Continuous refactoring practices
      - Team education and knowledge sharing
  
  metrics:
    description: "Technical debt measurement and tracking"
    importance: 0.6
    guidelines: |
      - Code quality metrics and trends
      - Technical debt ratio and principal
      - Development velocity impact metrics
      - Remediation progress and burn-down
      - Return on investment (ROI) analysis