name: "Fullstack Development Project"
description: "Memory template for managing fullstack development projects"
sections:
  requirements:
    description: "Project requirements and specifications"
    importance: 0.9
    guidelines: |
      - Functional requirements with clear acceptance criteria
      - Non-functional requirements (performance, security, scalability)
      - User stories with business value
      - API specifications and data models
      - Integration requirements with external systems
  
  architecture:
    description: "System architecture and design decisions"
    importance: 0.8
    guidelines: |
      - High-level system architecture diagrams
      - Technology stack decisions with rationale
      - Database schema and relationships
      - API design patterns and conventions
      - Security architecture and authentication flows
  
  frontend:
    description: "Frontend development progress and decisions"
    importance: 0.7
    guidelines: |
      - UI/UX design decisions and component structure
      - State management patterns and data flow
      - Routing and navigation architecture
      - Performance optimization strategies
      - Testing approach for frontend components
  
  backend:
    description: "Backend development progress and decisions"
    importance: 0.7
    guidelines: |
      - API implementation progress and patterns
      - Database operations and query optimization
      - Business logic organization and patterns
      - Error handling and logging strategies
      - Integration with external services
  
  devops:
    description: "DevOps, deployment, and infrastructure"
    importance: 0.6
    guidelines: |
      - CI/CD pipeline configuration and processes
      - Infrastructure as code and environment setup
      - Monitoring, logging, and alerting systems
      - Performance monitoring and optimization
      - Security scanning and vulnerability management
  
  testing:
    description: "Testing strategy and implementation"
    importance: 0.8
    guidelines: |
      - Unit testing coverage and patterns
      - Integration testing scenarios
      - End-to-end testing automation
      - Performance and load testing results
      - Bug tracking and resolution progress
  
  documentation:
    description: "Project documentation and knowledge sharing"
    importance: 0.6
    guidelines: |
      - Technical documentation and API docs
      - Deployment and operational procedures
      - Code review guidelines and standards
      - Architecture decision records (ADRs)
      - User guides and tutorials