template:
  id: "bmad.architect.api-design.v1"
  name: "Architect â€” API Design"
sections:
  - id: "api_purpose"
    title: "API Purpose"
    description: "What the API enables. Example: 'Public REST API for third-party integrations to read/write user tasks and projects. Supports webhooks for real-time updates.'"
  - id: "design_principles"
    title: "Design Principles"
    description: "Guidelines for API design. Example: 'RESTful, resource-oriented, consistent naming, versioned, paginated, rate-limited, comprehensive error messages.'"
  - id: "authentication"
    title: "Authentication & Authorization"
    description: "How API access is controlled. Example: 'OAuth 2.0 with API keys for server-to-server. Scope-based permissions (read:tasks, write:projects). Rate limits: 1000 req/hour per key.'"
  - id: "endpoints"
    title: "Endpoints & Resources"
    description: "List of API endpoints with HTTP methods. Example: 'GET /tasks, POST /tasks, GET /tasks/:id, PUT /tasks/:id, DELETE /tasks/:id, GET /projects, POST /projects, GET /webhooks.'"
  - id: "request_response"
    title: "Request/Response Format"
    description: "Data structures and examples. Example: 'POST /tasks body: {title, description, due_date, project_id}. Response: 201 Created {id, title, description, created_at, status}.'"
  - id: "error_handling"
    title: "Error Handling"
    description: "Error codes and messages. Example: '400 Bad Request (invalid data), 401 Unauthorized (invalid token), 403 Forbidden (insufficient scope), 429 Too Many Requests, 500 Internal Error.'"
  - id: "versioning_strategy"
    title: "Versioning Strategy"
    description: "How API versions are managed. Example: 'URL versioning (/v1/, /v2/). Maintain 2 versions simultaneously. 6-month deprecation notice. Breaking changes require new version.'"
  - id: "documentation"
    title: "Documentation Requirements"
    description: "What documentation is needed. Example: 'OpenAPI spec, interactive docs (Swagger), code examples in 3 languages, webhook guide, rate limit details, changelog.'"
metadata:
  usage: "api-design"
  priority: "high"
  workflow: "interface-design"
