template:
  id: "bmad.architect.scalability-analysis.v1"
  name: "Architect â€” Scalability Analysis"
sections:
  - id: "current_scale"
    title: "Current Scale"
    description: "Current system capacity and usage. Example: '5K active users, 100K requests/day, 50GB database, 2 app servers, 1 DB server. Peak: 200 req/min. Average response time: 150ms.'"
  - id: "target_scale"
    title: "Target Scale"
    description: "Expected future scale. Example: '50K active users (10x), 1M requests/day (10x), 500GB database (10x). Peak: 2K req/min. Must maintain <200ms response time.'"
  - id: "bottlenecks"
    title: "Current Bottlenecks"
    description: "Identified scaling limitations. Example: 'Database writes are serial bottleneck. Single Redis instance limits real-time features. File uploads saturate bandwidth. Search is slow on large datasets.'"
  - id: "scaling_strategy"
    title: "Scaling Strategy"
    description: "Approach to reach target scale. Example: 'Horizontal scaling: Add app servers behind load balancer. Database: Read replicas + sharding by tenant. Redis cluster. CDN for static assets. Async processing.'"
  - id: "architecture_changes"
    title: "Architecture Changes Required"
    description: "Modifications needed to scale. Example: 'Move to microservices for independent scaling. Introduce message queue for async work. Add caching layer. Implement database sharding. Deploy to multiple regions.'"
  - id: "infrastructure_requirements"
    title: "Infrastructure Requirements"
    description: "Resources needed at target scale. Example: 'Compute: 20 app servers (auto-scale 10-30). Database: primary + 3 read replicas. Redis cluster (3 nodes). Object storage: 2TB. CDN: global.'"
  - id: "data_strategy"
    title: "Data Management Strategy"
    description: "How to handle data at scale. Example: 'Partition database by tenant. Archive old data to cold storage. Implement data lifecycle policies. Use time-series DB for analytics. Denormalize for read performance.'"
  - id: "testing_plan"
    title: "Load Testing Plan"
    description: "How to validate scaling. Example: 'Load test scenarios: normal load (1K req/min), peak load (3K req/min), sustained load (24 hours). Test database failover. Test auto-scaling. Chaos engineering.'"
  - id: "cost_analysis"
    title: "Cost Analysis"
    description: "Cost implications of scaling. Example: 'Current: $2K/month. Target scale: $15K/month. Cost per user decreases from $0.40 to $0.30. Break-even at 35K users. Optimization opportunities: reserved instances.'"
metadata:
  usage: "scalability"
  priority: "high"
  workflow: "capacity-planning"
