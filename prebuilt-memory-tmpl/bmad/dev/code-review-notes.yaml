template:
  id: "bmad.dev.code-review-notes.v1"
  name: "Developer â€” Code Review Notes"
sections:
  - id: "pr_summary"
    title: "Pull Request Summary"
    description: "What the PR accomplishes. Example: 'PR #123: Add task filtering by status and assignee. Includes API endpoint, frontend UI, tests. Related to story #45.'"
  - id: "positive_feedback"
    title: "Positive Feedback"
    description: "What was done well. Example: 'Clean separation of concerns. Comprehensive test coverage. Good error handling. Clear variable naming. Nice use of TypeScript types.'"
  - id: "concerns"
    title: "Concerns & Issues"
    description: "Problems that need addressing. Example: 'N+1 query in task filtering (performance issue). Missing validation for edge cases. Error messages not user-friendly. No loading state in UI.'"
  - id: "suggestions"
    title: "Suggestions & Improvements"
    description: "Optional improvements to consider. Example: 'Could use query builder to optimize. Consider memoizing filter results. Could extract filter logic to reusable hook. Add keyboard shortcuts for power users.'"
  - id: "questions"
    title: "Questions & Clarifications"
    description: "Things that need explanation. Example: 'Why use state instead of URL params for filters? Is the 100ms debounce enough? Should we cache filter results? How does this work with pagination?'"
  - id: "action_items"
    title: "Action Items"
    description: "What needs to be done before merge. Example: 'MUST: Fix N+1 query, Add input validation. SHOULD: Improve error messages, Add loading state. NICE: Add keyboard shortcuts, Memoize results.'"
  - id: "approval_status"
    title: "Approval Status"
    description: "Review decision and reasoning. Example: 'Approved with changes requested. Address MUST items before merge. SHOULD items can be follow-up PR. Overall good work, just needs performance fix.'"
metadata:
  usage: "code-review"
  priority: "medium"
  workflow: "quality-assurance"
